// ~~~~~~~~
// tokens.h
// Token macro definitions.
#ifndef TOKEN
#define TOKEN(X)
#endif

#ifndef OPERATOR
#define OPERATOR(X, CHAR) TOKEN(X)
#endif

#ifndef PUNCTUATOR
#define PUNCTUATOR(X, CHAR) TOKEN(X)
#endif

#ifndef KEYWORD
#define KEYWORD(X) TOKEN(KW_##X)
#endif

#ifndef INT_LIT_SUFFIX
#define INT_LIT_SUFFIX(X)
#endif

#ifndef FP_LIT_SUFFIX
#define FP_LIT_SUFFIX(X)
#endif

TOKEN(ID)
TOKEN(CHAR_LIT)
TOKEN(FP_LIT)
TOKEN(HEX_INT_LIT)
TOKEN(HEX_FP_LIT)
TOKEN(INT_LIT)
TOKEN(OCT_LIT)
TOKEN(STR_LIT)
TOKEN(BHCC_EOF)
TOKEN(UNKNOWN)

OPERATOR(ADD, "+")
OPERATOR(SUB, "-")
OPERATOR(STAR, "*")
OPERATOR(DIV, "/")
OPERATOR(MODULO, "%")
OPERATOR(INCREMENT, "++")
OPERATOR(DECREMENT, "--")
OPERATOR(ASSIGN, "=")
OPERATOR(ADD_ASSIGN, "+=")
OPERATOR(SUB_ASSIGN, "-=")
OPERATOR(MUL_ASSIGN, "*=")
OPERATOR(DIV_ASSIGN, "/=")
OPERATOR(MOD_ASSIGN, "%=")
OPERATOR(EQ, "==")
OPERATOR(GT, ">")
OPERATOR(LT, "<")
OPERATOR(NE, "!=")
OPERATOR(GEQ, ">=")
OPERATOR(LEQ, "<=")
OPERATOR(LOG_AND, "&&")
OPERATOR(LOG_OR, "||")
OPERATOR(LOG_NOT, "!")
OPERATOR(BIT_AND_OR_ADDRESS, "&")
OPERATOR(BIT_OR, "|")
OPERATOR(BIT_ASSIGN_XOR, "^=")
OPERATOR(BIT_ASSIGN_AND, "&=")
OPERATOR(BIT_ASSIGN_OR, "|=")
OPERATOR(BIT_XOR, "^")
OPERATOR(BIT_COMP, "~")
OPERATOR(SHL, "<<")
OPERATOR(SHR, ">>")
OPERATOR(SHL_ASSIGN, "<<=")
OPERATOR(SHR_ASSIGN, ">>=")
OPERATOR(COMMA, ",")
OPERATOR(DOT, ".")
OPERATOR(ARROW, "->")
OPERATOR(TERNARY_COND, "?")
OPERATOR(TERNARY_ELSE, ":")

PUNCTUATOR(OPEN_BRACE, "{")
PUNCTUATOR(CLOSE_BRACE, "}")
PUNCTUATOR(OPEN_PAREN, "(")
PUNCTUATOR(CLOSE_PAREN, ")")
PUNCTUATOR(OPEN_BRACKET, "[")
PUNCTUATOR(CLOSE_BRACKET, "]")
PUNCTUATOR(VARIADIC, "...")
PUNCTUATOR(SEMI_COLON, ";")
PUNCTUATOR(INLINE_COMMENT, "//")
PUNCTUATOR(BLOCK_COMMENT, "/*")

KEYWORD(break)
KEYWORD(case)
KEYWORD(char)
KEYWORD(const)
KEYWORD(continue)
KEYWORD(default)
KEYWORD(do)
KEYWORD(double)
KEYWORD(else)
KEYWORD(enum)
KEYWORD(extern)
KEYWORD(float)
KEYWORD(for)
KEYWORD(goto)
KEYWORD(if)
KEYWORD(int)
KEYWORD(inline)
KEYWORD(long)
KEYWORD(register)
KEYWORD(return)
KEYWORD(short)
KEYWORD(signed)
KEYWORD(sizeof)
KEYWORD(static)
KEYWORD(struct)
KEYWORD(switch)
KEYWORD(typedef)
KEYWORD(union)
KEYWORD(unsigned)
KEYWORD(void)
KEYWORD(volatile)
KEYWORD(while)
#define KW_COUNT 32
#define MAX_KW_LEN 8

INT_LIT_SUFFIX(I)
INT_LIT_SUFFIX(U)
INT_LIT_SUFFIX(L)
INT_LIT_SUFFIX(UL)
INT_LIT_SUFFIX(LL)
INT_LIT_SUFFIX(ULL)

FP_LIT_SUFFIX(D)
FP_LIT_SUFFIX(F)
FP_LIT_SUFFIX(LD)

#undef TOKEN
#undef OPERATOR
#undef PUNCTUATOR
#undef KEYWORD
#undef INT_LIT_SUFFIX
#undef FP_LIT_SUFFIX
